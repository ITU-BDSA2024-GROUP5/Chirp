@page "/{author}"
@using Chirp.Core.DataModels
@using Chirp.Infrastructure.Services.Interfaces
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model UserTimelineModel
@inject SignInManager<Author> SignInManager
@inject IChirpService ChirpService
@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";
    var routeName = HttpContext.GetRouteValue("author")?.ToString();
    if (routeName != null && routeName.Contains('@'))
    {
        routeName = ChirpService.GetAuthorByEmail(routeName).Result?.Name;
    }

    if (routeName != null && routeName.Equals("Oauth.styles.css")) return;
}
<div>
    @if (SignInManager.IsSignedIn(User) && routeName != null)
    {
        if (routeName.Equals(User.Identity?.Name))
        {
            <div class="cheepbox">
                @if (User.Identity != null)
                {
                    <h3>What's on your mind @(User.Identity.Name)?</h3>
                }
                else
                {
                    <h3>What's on your mind @(User.FindFirst("email")?.Value)?</h3>
                }
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                <form method="post">
                    <input style="float: left" type="text" asp-for="Text">
                    <input type="submit" value="Share">
                </form>
            </div>
        }
         
    }
    <br/>
    <form method = "post" asp-page-handler = "ToggleFollow" asp-route-author = "@routeName" >
        <h2> @routeName's Timeline
            @if (SignInManager.IsSignedIn(User))
            {
                @if(User.Identity?.Name != null && !User.Identity.Name.Equals(routeName))
                {
                    var user = ChirpService.GetAuthorByName(User.Identity.Name).Result;
                    var follows =  user?.Follows != null && routeName != null && user.Follows.Contains(routeName.ToLower()); 
                    <button class="followbutton" style="font-size: 20px" name = "authorToFollow" value = "@routeName" style = "font-size: 12px" >
                        @(follows ? "Unfollow" : "Follow")
                    </button>
                }
            }
        </h2>
    </form>

    @if (Model.Cheeps!=null)
    {
        @if (SignInManager.IsSignedIn(User))
        {
            if (User.Identity != null && User.Identity.Name != null && User.Identity.Name.Equals(routeName))
            {
                <ul id="messagelist" class="cheeps">
                    @foreach (var cheep in @Model.Cheeps)
                    {
                        <li>
                            <div style="display: flex; align-items: normal;">
                                <p>
                                    <strong>
                                        <a href="/@cheep.Author">@cheep.Author</a>
                                    </strong>
                                    @cheep.Text
                                    <small>&mdash; @cheep.TimeStamp</small>
                                </p>
                            </div>
                        </li>
                    }
                </ul>
            }
            else
            {
                <ul id="messagelist" class="cheeps">
                    @foreach (var cheep in Model.Cheeps)
                    {
                        <li>
                            <p>
                                <strong>
                                    <a href="/@cheep.Author">@cheep.Author</a>
                                </strong>
                                @cheep.Text
                                <small>&mdash; @cheep.TimeStamp</small>
                            </p>
                        </li>
                    }
                </ul>
            }
        }
        else
        {
            <ul id="messagelist" class="cheeps">
                @foreach (var cheep in Model.Cheeps)
                {
                    <li>
                        <p>
                            <strong>
                                <a href="/@cheep.Author">@cheep.Author</a>
                            </strong>
                            @cheep.Text
                            <small>&mdash; @cheep.TimeStamp</small>
                        </p>
                    </li>
                }
            </ul>
        }
    }
    else{
        <em>There are no cheeps so far.</em>
        
    }
    <nav>
        <ul class="pagination">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a asp-page="" asp-route-author="@routeName" asp-route-currentpage="1" class="page-link">First</a>
            </li>
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a asp-page="" asp-route-author="@routeName" asp-route-currentpage="@(Model.CurrentPage - 1)" class="page-link">← Previous</a>
            </li>
            @for (var i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
            {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">

                @{
                    var i1 = i;
                }
                <a asp-page="" asp-route-author="@routeName" asp-route-currentpage="@i1" class="page-link">@i1</a>
            </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a asp-page="" asp-route-author="@routeName" asp-route-currentpage="@(Model.CurrentPage + 1)" class="page-link">Next →</a>
            </li>
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a asp-page="" asp-route-author="@routeName" asp-route-currentpage="@Model.TotalPages" class="page-link">Last</a>
            </li>
        </ul>
    </nav>
</div>
