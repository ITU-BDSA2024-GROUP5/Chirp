@page "/{author}"
@using Chirp.Core.DataModels
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model UserTimelineModel
@inject SignInManager<Author> SignInManager
@inject ICheepRepository CheepRepository
@inject IAuthorRepository AuthorRepository
@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";
    var routeName = HttpContext.GetRouteValue("author");
}

<div>
    @if (SignInManager.IsSignedIn(User) && routeName != null)
    {
        @if (routeName.ToString().Contains('@'))
        {
            routeName = AuthorRepository.GetAuthorByEmail(routeName.ToString()).Result.Name;
        }
        @if (routeName.Equals(User.Identity.Name))
        {
            <div class="cheepbox">
                @if (User.Identity != null)
                {
                    <h3>What's on your mind @(User.Identity.Name)?</h3>
                }
                else
                {
                    <h3>What's on your mind @(User.FindFirst("email")?.Value)?</h3>
                }
                <form method="post">
                    <input style="float: left" type="text" asp-for="Text">
                    <input type="submit" value="Share">
                </form>
            </div>
        }
         
    }
    <br/>
    <form method = "post" asp-page-handler = "ToggleFollow" asp-route-author = "@routeName" >
        <h2> @routeName's Timeline
            @if (SignInManager.IsSignedIn(User))
            {
                @if(User.Identity?.Name != null && !User.Identity.Name.Equals(routeName))
                {
                    var user = AuthorRepository.GetAuthorByNameEntity(User.Identity.Name).Result;
                    var follows =  user?.Follows != null && user.Follows.Contains(routeName); 
                    <button name = "authorToFollow" value = "@routeName" style = "font-size: 12px" >
                        @(follows ? "Unfollow" : "Follow")
                    </button>
                }
            }
        </h2>
    </form>

    @if (Model.Cheeps!=null)
    {
        @if (SignInManager.IsSignedIn(User))
        {
            if (User.Identity.Name.Equals(routeName))
            {
                <ul id="messagelist" class="cheeps">
                    @foreach (var cheep in @Model.Cheeps)
                    {
                        <li>
                            <p>
                                <strong>
                                    <a href="/@cheep.Author">@cheep.Author</a>
                                </strong>
                                @cheep.Text
                                <small>&mdash; @cheep.TimeStamp</small>
                            </p>
                        </li>
                    }
                </ul>
            }
            else
            {
                <div style="display: none">
                    @Model.FetchCheeps(@routeName.ToString())
                </div>
        
                <ul id="messagelist" class="cheeps">
                    @foreach (var cheep in Model.Cheeps)
                    {
                        <li>
                            <p>
                                <strong>
                                    <a href="/@cheep.Author">@cheep.Author</a>
                                </strong>
                                @cheep.Text
                                <small>&mdash; @cheep.TimeStamp</small>
                            </p>
                        </li>
                    }
                </ul>
            }
        }
        else
        {
            <div style="display: none">
                @Model.FetchCheeps(@routeName.ToString())
            </div>
        
            <ul id="messagelist" class="cheeps">
                @foreach (var cheep in Model.Cheeps)
                {
                    <li>
                        <p>
                            <strong>
                                <a href="/@cheep.Author">@cheep.Author</a>
                            </strong>
                            @cheep.Text
                            <small>&mdash; @cheep.TimeStamp</small>
                        </p>
                    </li>
                }
            </ul>
        }
    }
    else if(Model.Cheeps==null)
    {
        <em>You can't cheep that! Cheep is empty!</em>
        
        <div style="display: none">
            @Model.FetchCheeps(@routeName.ToString())
            
        </div>
        {
            <ul id="messagelist" class="cheeps">
                @foreach (var cheep in Model.Cheeps)
                {
                    <li>
                        <p>
                            <strong>
                                <a href="/@cheep.Author">@cheep.Author</a>
                            </strong>
                            @cheep.Text
                            <small>&mdash; @cheep.TimeStamp</small>
                        </p>
                    </li>
                }
            </ul>
        }
    }else{
        <em>There are no cheeps so far.</em>}
    
</div>
