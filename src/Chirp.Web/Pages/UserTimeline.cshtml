@page "/{author}"
@using Chirp.Core.DataModels
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model UserTimelineModel
@inject SignInManager<Author> SignInManager
@inject ICheepRepository CheepRepository
@inject IAuthorRepository AuthorRepository
@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";
    var routeName = HttpContext.GetRouteValue("author");
}

<div>
    @if (SignInManager.IsSignedIn(User) && routeName != null)
    {
        @if (routeName.ToString().Contains('@'))
        {
            routeName = await AuthorRepository.GetAuthorByEmail(routeName.ToString());
        }
        @if (routeName.Equals(User.Identity.Name))
        {
            <div class="cheepbox">
                @if (User.Identity != null)
                {
                    <h3>What's on your mind @(User.Identity.Name)?</h3>
                }
                else
                {
                    <h3>What's on your mind @(User.FindFirst("email")?.Value)?</h3>
                }
                <form method="post">
                    <input style="float: left" type="text" asp-for="Text">
                    <input type="submit" value="Share">
                </form>
            </div>
        }
        
    }<br/>
    <h2> @routeName's Timeline
        @if(!User.Identity.Name.Equals(routeName))
        {
            var user = AuthorRepository.GetAuthorByName(User.Identity.Name).Result;
            Console.WriteLine(user);
            Console.WriteLine(user?.Follows?.Count);
            var follows = user.Follows.Contains(routeName);
            <form method="post" asp-page-handler="ToggleFollow" asp-route-author="@routeName">
                <button name="authorToFollow" value="@routeName" style="font-size: 12px">
                    @(follows ? "Unfollow" : "Follow")
                </button>
            </form>
        }
    </h2>

    @if (Model.Cheeps!=null)
    {
        var allcheeps = Model.Cheeps;
        var userfollows = AuthorRepository.GetAuthorByName(User.Identity.Name).Result?.Follows;
        if (userfollows != null)
        {
            foreach (var followed in userfollows)
            {
                var followee = await AuthorRepository.GetAuthorByNameEntity(followed);
                var cheeps = await CheepRepository.GetCheepsByAuthor(followee.UserName);
                allcheeps.AddRange(cheeps);
            }
        }

        if(User.Identity.Name.Equals(routeName))
        {
            <ul id="messagelist" class="cheeps">
            @foreach (var cheep in allcheeps)
            {
                <li>
                    <p>
                        <strong>
                            <a href="/@cheep.Author">@cheep.Author</a>
                        </strong>
                        @cheep.Text
                        <small>&mdash; @cheep.TimeStamp</small>
                    </p>
                </li>
            }
            </ul>
        }
        else
        {
            <ul id="messagelist" class="cheeps">
                @foreach (var cheep in Model.Cheeps)
                {
                    <li>
                        <p>
                            <strong>
                                <a href="/@cheep.Author">@cheep.Author</a>
                            </strong>
                            @cheep.Text
                            <small>&mdash; @cheep.TimeStamp</small>
                        </p>
                    </li>
                }
            </ul>
        }
        
    }
    else if(Model.Cheeps==null)
    {
        <em>You can't cheep that! Cheep is empty!</em>
        
        <div style="display: none">
            @Model.FetchCheeps(@routeName.ToString())
        </div>
        
        var allcheeps = Model.Cheeps;
        var userfollows = AuthorRepository.GetAuthorByName(User.Identity.Name).Result?.Follows;
        if (userfollows != null)
        {
            foreach (var followed in userfollows)
            {
                var followee = await AuthorRepository.GetAuthorByNameEntity(followed);
                var cheeps = await CheepRepository.GetCheepsByAuthor(followee.UserName);
                allcheeps.AddRange(cheeps);
            }
        }
        if(User.Identity.Name.Equals(routeName))
        {
            <ul id="messagelist" class="cheeps">
                @foreach (var cheep in allcheeps)
                {
                    <li>
                        <p>
                            <strong>
                                <a href="/@cheep.Author">@cheep.Author</a>
                            </strong>
                            @cheep.Text
                            <small>&mdash; @cheep.TimeStamp</small>
                        </p>
                    </li>
                }
            </ul>
        }
        else
        {
            <ul id="messagelist" class="cheeps">
                @foreach (var cheep in Model.Cheeps)
                {
                    <li>
                        <p>
                            <strong>
                                <a href="/@cheep.Author">@cheep.Author</a>
                            </strong>
                            @cheep.Text
                            <small>&mdash; @cheep.TimeStamp</small>
                        </p>
                    </li>
                }
            </ul>
        }
    }else{
        <em>There are no cheeps so far.</em>}
    
</div>
