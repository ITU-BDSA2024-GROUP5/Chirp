@page
@inject SignInManager<Author> SignInManager
@using Chirp.Core.DataModels
@using Chirp.Infrastructure.Services.Interfaces
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PublicModel
@inject IChirpService ChirpService


@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";
}

<div>
    @if (SignInManager.IsSignedIn(User))
    {
        <div class="cheepbox">
            @if (User.Identity != null)
            {
                <h3>What's on your mind @(User.Identity.Name)?</h3>
            }
            else
            {
                <h3>What's on your mind @(User.FindFirst("email")?.Value)?</h3>
            }
            <form method="post">
                <input style="float: left" type="text" asp-for="Text">
                <input type="submit" value="Share">
            </form>
        </div>
    } <br />
    <h2> Public Timeline </h2>
    @if (Model.Cheeps != null)
    {
        <ul id="messagelist" class="cheeps">
            @foreach (var cheep in Model.Cheeps)
            {
                @if (SignInManager.IsSignedIn(User))
                {
                    <form method="post" asp-page-handler="ToggleFollow" asp-route-author="@cheep.Author"
                        style="margin-right: auto;">
                        <li>
                            <div style="display: flex; align-items: normal;">
                                <p>
                                    <strong>
                                        <a href="/@cheep.Author">@cheep.Author</a>
                                    </strong>
                                    @cheep.Text
                                    <small>&mdash; @cheep.TimeStamp</small>
                                    @if (User.Identity?.Name != null && !User.Identity.Name.Equals(cheep.Author))
                                    {
                                        var user = ChirpService.GetAuthorByName(User.Identity.Name).Result;
                                        var follows = user?.Follows != null && user.Follows.Contains(@cheep.Author);
                                        <button class="followbutton" type="submit" name="authorToFollow" value="@cheep.Author" style="font-size: 12px">
                                            @(follows ? "Unfollow" : "Follow")
                                        </button>
                                    }
                                </p>
                            </div>

                        </li>
                    </form>
                }
                else
                {
                    <li>
                        <div style="display: flex; align-items: normal;">
                            <p>
                                <strong>
                                    <a href="/@cheep.Author">@cheep.Author</a>
                                </strong>
                                @cheep.Text
                                <small>&mdash; @cheep.TimeStamp</small>
                                <button class="followbutton" style="font-size: 12px" onclick="window.location.href='/Identity/Account/Login';">Follow</button>
                            </p>
                        </div>
                    </li>
                }
            }

        </ul>
    }
    @* else if (Model.Cheeps == null) *@
    @* { *@
    @*     <em> You can't cheep that! Cheep is empty! </em> *@
    @* *@
    @*     <div style="display: none"> *@
    @*         @(_ = Model.FetchCheeps()) *@
    @*     </div> *@
    @* *@
    @*     <ul id="messagelist" class="cheeps"> *@
    @*         @if (Model.Cheeps != null) *@
    @*         { *@
    @*             foreach (var cheep in Model.Cheeps) *@
    @*             { *@
    @*                 <form method="post" asp-page-handler="ToggleFollow" asp-route-author="@cheep.Author"> *@
    @*                     <li> *@
    @*                         <div style="display: flex; align-items: normal;"> *@
    @*                             <p> *@
    @*                                 <strong> *@
    @*                                     <a href="/@cheep.Author">@cheep.Author</a> *@
    @*                                 </strong> *@
    @*                                 @cheep.Text *@
    @*                                 <small>&mdash; @cheep.TimeStamp</small> *@
    @*                                 @if (SignInManager.IsSignedIn(User)) *@
    @*                                 { *@
    @*                                     if (User.Identity?.Name != null && !User.Identity.Name.Equals(cheep.Author)) *@
    @*                                     { *@
    @*                                         var user = ChirpService.GetAuthorByName(User.Identity.Name).Result; *@
    @*                                         var follows = user?.Follows != null && user.Follows.Contains(@cheep.Author); *@
    @*                                         <button class="followbutton" type="submit" name="authorToFollow" value="@cheep.Author" style="font-size: 12px"> *@
    @*                                             @(follows ? "Unfollow" : "Follow") *@
    @*                                         </button> *@
    @*                                     } *@
    @*                                 } *@
    @*                             </p> *@
    @*                         </div> *@
    @*                     </li> *@
    @*                 </form> *@
    @*             } *@
    @*         } *@
    @*     </ul> *@
    @* *@
    @* } *@
    else
    {
        <em>There are no cheeps so far.</em>
    }
    <nav>
        <ul class="pagination">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a asp-page="/Public" asp-route-currentpage="1" class="page-link">First</a>
            </li>
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a asp-page="/Public" asp-route-currentpage="@(Model.CurrentPage - 1)" class="page-link">← Previous</a>
            </li>
            @for (var i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
            {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">

                @{
                    var i1 = i;
                }
                <a asp-page="/Public" asp-route-currentpage="@i1" class="page-link">@i1</a>
            </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a asp-page="/Public" asp-route-currentpage="@(Model.CurrentPage + 1)" class="page-link">Next →</a>
            </li>
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a asp-page="/Public" asp-route-currentpage="@Model.TotalPages" class="page-link">Last</a>
            </li>
        </ul>
    </nav>
</div>
