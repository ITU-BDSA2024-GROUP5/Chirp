@page
@inject SignInManager<Author> SignInManager
@using Chirp.Core.DataModels
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PublicModel
@inject IAuthorRepository AuthorRepository


@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";
}

<div>
    @if (SignInManager.IsSignedIn(User))
    {
    <div class="cheepbox">
        @if (User.Identity != null)
        {
        <h3>What's on your mind @(User.Identity.Name)?</h3>
        }
        else
        {
        <h3>What's on your mind @(User.FindFirst("email")?.Value)?</h3>
        }
        <form method="post">
            <input style="float: left" type="text" asp-for="Text">
            <input type="submit" value="Share">
        </form>
    </div>
    } <br/>
    <h2> Public Timeline </h2>
    @if (Model.Cheeps != null)
    {
        <ul id="messagelist" class="cheeps">
            @foreach (var cheep in Model.Cheeps)
            {
                @if (SignInManager.IsSignedIn(User))
                {
                    <form method="post" asp-page-handler="ToggleFollow" asp-route-author="@cheep.Author" style="margin-right: auto;">
                        <li>
                            <p style="display: flex; align-items: normal;">
                                <strong>
                                    <a href="/@cheep.Author">@cheep.Author</a>
                                </strong>
                                @cheep.Text
                                <small>&mdash; @cheep.TimeStamp</small>
                                @if (User.Identity?.Name != null && !User.Identity.Name.Equals(cheep.Author))
                                {
                                var user = AuthorRepository.GetAuthorByNameEntity(User.Identity.Name).Result;
                                Console.WriteLine(user);
                                Console.WriteLine(user?.Follows?.Count);
                                var follows = user?.Follows != null && user.Follows.Contains(@cheep.Author);
                                <button type="submit" name="authorToFollow" value="@cheep.Author" style="font-size: 12px">
                                    @(follows ? "Unfollow" : "Follow")
                                </button>
                                }
                            </p>
                        </li>
                    </form>
                }
                else
                {
                    <li>
                        <p style="display: flex; align-items: normal;">
                            <strong>
                                <a href="/@cheep.Author">@cheep.Author</a>
                            </strong>
                            @cheep.Text
                            <small>&mdash; @cheep.TimeStamp</small>
                            <small>
                                <a href="/Identity/Account/Login">
                                    <button>Follow</button>
                                </a></small>
                        </p>
                    </li>
                }
            }
                
        </ul>
    }
    else if (Model.Cheeps == null)
    {
        <em> You can't cheep that! Cheep is empty! </em>

        <div style="display: none">
            @Model.FetchCheeps()
        </div>

        <ul id="messagelist" class="cheeps">
            @foreach (var cheep in Model.Cheeps)
            {
                <form method="post" asp-page-handler="ToggleFollow" asp-route-author="@cheep.Author">
                    <li>
                        <p>
                            <strong>
                                <a href="/@cheep.Author">@cheep.Author</a>
                            </strong>
                            @cheep.Text
                            <small>&mdash; @cheep.TimeStamp</small>
                            @if (SignInManager.IsSignedIn(User))
                            {
                                if (User.Identity?.Name != null && !User.Identity.Name.Equals(cheep.Author))
                                {
                                    var user = AuthorRepository.GetAuthorByNameEntity(User.Identity.Name).Result;
                                    Console.WriteLine(user);
                                    Console.WriteLine(user?.Follows?.Count);
                                    var follows = user?.Follows != null && user.Follows.Contains(@cheep.Author);
                                    <button type="submit" name="authorToFollow" value="@cheep.Author" style="font-size: 12px">
                                        @(follows ? "Unfollow" : "Follow")
                                    </button>
                                }
                            }
                        </p>
                    </li>
                </form>
            }
        </ul>
    }else{
    <em>There are no cheeps so far.</em>
    }
    <ul class="pagination">
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
            <a asp-page="/Public" asp-route-currentpage="@i" class="page-link">@i</a>
        </li>
        }
    </ul>
</div>
